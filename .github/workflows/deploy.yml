name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create go.env from secrets
        run: |
          {
            echo "SESSION_SECRET=${{ secrets.SESSION_SECRET }}"
            echo "ADMIN_ID=${{ secrets.ADMIN_ID }}"
            echo "ADMIN_PW=${{ secrets.ADMIN_PW }}"
            echo "S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}"
            echo "AWS_REGION=${{ secrets.AWS_REGION }}"
          } > go.env

      - name: Build Docker image
        run: |
          docker build -t my-go-app .

      - name: Save Docker image as archive
        run: |
          docker save my-go-app | gzip > my-go-app.tar.gz

      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: SCP Docker image and env to EC2
        run: |
          scp -o StrictHostKeyChecking=no my-go-app.tar.gz ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/
          scp -o StrictHostKeyChecking=no go.env ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/

      - name: SSH into EC2 and deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            docker stop my-go-app || true
            docker rm my-go-app || true
            gunzip -c my-go-app.tar.gz | docker load
            docker run -d --name my-go-app --env-file go.env -p 8080:8080 my-go-app
          EOF